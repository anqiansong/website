"use strict";(self.webpackChunkkeson_cn=self.webpackChunkkeson_cn||[]).push([[5206],{4137:function(e,n,a){a.d(n,{Zo:function(){return u},kt:function(){return C}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function c(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=t.createContext({}),p=function(e){var n=t.useContext(i),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},u=function(e){var n=p(e.components);return t.createElement(i.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},s=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(a),C=r,k=s["".concat(i,".").concat(C)]||s[C]||d[C]||l;return a?t.createElement(k,o(o({ref:n},u),{},{components:a})):t.createElement(k,o({ref:n},u))}));function C(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=s;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var p=2;p<l;p++)o[p]=a[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}s.displayName="MDXCreateElement"},9916:function(e,n,a){a.r(n),a.d(n,{assets:function(){return u},contentTitle:function(){return i},default:function(){return C},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return d}});var t=a(3117),r=a(102),l=(a(7294),a(4137)),o=["components"],c={title:"grpc \u6e90\u7801\u9605\u8bfb\u4e4b balancer",date:new Date("2022-01-17T00:00:00.000Z"),authors:"keson",tags:["gprc","\u6e90\u7801\u5206\u6790"]},i=void 0,p={permalink:"/go/grpc-balaner",source:"@site/blog/go/grpc-balaner.md",title:"grpc \u6e90\u7801\u9605\u8bfb\u4e4b balancer",description:"cover",date:"2022-01-17T00:00:00.000Z",formattedDate:"2022\u5e741\u670817\u65e5",tags:[{label:"gprc",permalink:"/tags/gprc"},{label:"\u6e90\u7801\u5206\u6790",permalink:"/tags/\u6e90\u7801\u5206\u6790"}],readingTime:9.72,truncated:!0,authors:[{name:"Keson",title:"\u5b57\u8282\u8df3\u52a8\u5f00\u53d1\u5de5\u7a0b\u5e08 /  goctl \u7ef4\u62a4\u4eba",url:"https://github.com/anqiansong",imageURL:"/img/logo.webp",key:"keson"}],frontMatter:{title:"grpc \u6e90\u7801\u9605\u8bfb\u4e4b balancer",date:"2022-01-17T00:00:00.000Z",authors:"keson",tags:["gprc","\u6e90\u7801\u5206\u6790"]},prevItem:{title:"\u51e4\u51f0\u67b6\u6784\u5b66\u4e60\u7b14\u8bb0\u2014\u2014\u6f14\u8fdb\u4e2d\u7684\u67b6\u6784",permalink:"/arch/icyfenix-one"},nextItem:{title:"gRPC \u6e90\u7801\u9605\u8bfb\u53ca\u5b9e\u8df5\u4e4b resolver",permalink:"/go/grpc-resolver"}},u={authorsImageUrls:[void 0]},d=[{value:"UpdateState",id:"updatestate",level:2},{value:"gRPC Balancer",id:"grpc-balancer",level:2},{value:"roundrobin",id:"roundrobin",level:2},{value:"balancer.ClientConn.NewSubConn",id:"balancerclientconnnewsubconn",level:3},{value:"\u81ea\u5b9a\u4e49\u8d1f\u8f7d\u5747\u8861\u5668",id:"\u81ea\u5b9a\u4e49\u8d1f\u8f7d\u5747\u8861\u5668",level:2},{value:"\u73af\u5883",id:"\u73af\u5883",level:3},{value:"\u8d1f\u8f7d\u5747\u8861\u76ee\u6807",id:"\u8d1f\u8f7d\u5747\u8861\u76ee\u6807",level:3},{value:"\u6f14\u793a\u6548\u679c",id:"\u6f14\u793a\u6548\u679c",level:3},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2},{value:"\u6e90\u7801",id:"\u6e90\u7801",level:2}],s={toc:d};function C(e){var n=e.components,c=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,t.Z)({},s,c,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"cover",src:a(4631).Z,width:"1200",height:"300"})),(0,l.kt)("p",null,"\u63a5\u7740\u4e0a\u7bc7\u300agRPC \u63d2\u4ef6\u5f0f\u7f16\u7a0b\u4e4bResolver\u300b\uff0cgRPC \u5c06 ",(0,l.kt)("inlineCode",{parentName:"p"},"target")," \u89e3\u6790\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"resolver.Target")," \u540e\uff0c\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"resolver.Builder.Build")," \u65b9\u6cd5\u8c03\u7528\n",(0,l.kt)("inlineCode",{parentName:"p"},"resolver.ClientConn.UpdateState(State) error")," \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u505a\u4e86\u54ea\u4e9b\u4e8b\u60c5\u5462\uff0c\u6211\u4eec\u672c\u7bc7\u63a5\u7740\u770b\u6e90\u7801\u5f80\u4e0b\u8d70\u3002"),(0,l.kt)("h2",{id:"updatestate"},"UpdateState"),(0,l.kt)("p",null,"UpdateState \u7684\u8c03\u7528\u4f1a\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"grpc.ClientConn.updateResolverState")," \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4e3b\u8981\u505a\u4e86\u5982\u4e0b\u5de5\u4f5c\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"ServiceConfig \u5904\u7406"),(0,l.kt)("li",{parentName:"ul"},"BalancerWrapper \u521b\u5efa"),(0,l.kt)("li",{parentName:"ul"},"\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"balancer.updateClientConnState")," \u65b9\u6cd5 \u6267\u884c\u8d1f\u8f7d\u5747\u8861\u903b\u8f91\u66f4\u65b0")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (cc *ClientConn) updateResolverState(s resolver.State, err error) error {\n    ...\n    cc.maybeApplyDefaultServiceConfig(s.Addresses)\n    ...\n    cc.applyServiceConfigAndBalancer(sc, configSelector, s.Addresses)\n    ...\n    // reference: balancer_conn_wrappers.go:164\n    // bw.updateClientConnState -> ccBalancerWrapper.updateClientConnState\n    bw.updateClientConnState(&balancer.ClientConnState{ResolverState: s, BalancerConfig: balCfg})\n    ...\n}\n")),(0,l.kt)("blockquote",null,(0,l.kt)("h3",{parentName:"blockquote",id:"\u6e29\u99a8\u63d0\u793a"},"\u6e29\u99a8\u63d0\u793a"),(0,l.kt)("p",{parentName:"blockquote"},"\u8fd9\u91cc\u5148\u4ee5\u641e\u61c2 gRPC \u4e3b\u6d41\u7a0b\u601d\u8def\u4e3a\u4e3b\uff0c\u4e0d\u6263\u592a\u7ec6\u8282\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u4e00\u4e9b ",(0,l.kt)("inlineCode",{parentName:"p"},"GRPCLB")," \u5904\u7406\u3001error\u5904\u7406\uff0cServiceConfigSelector \u5904\u7406\u7b49\u53ef\u4ee5\u67e5\u770b\u6e90\u7801\u3002")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bw.updateClientConnState")," \u8c03\u7528\u672c\u8d28\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"ccBalancerWrapper.updateClientConnState"),"\n\u800c ",(0,l.kt)("inlineCode",{parentName:"p"},"ccBalancerWrapper.updateClientConnState")," \u5c31\u505a\u4e86\u4e00\u4ef6\u4e8b\u60c5\uff0c\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.Balancer.UpdateClientConnState")," \u65b9\u6cd5"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (ccb *ccBalancerWrapper) updateClientConnState(ccs *balancer.ClientConnState) error {\n    ccb.balancerMu.Lock()\n    defer ccb.balancerMu.Unlock()\n    return ccb.balancer.UpdateClientConnState(*ccs)\n}\n")),(0,l.kt)("p",null,"\u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u60f3\u770b ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer")," \u6e90\u7801\u903b\u8f91\u6709\u4e24\u79cd\u9014\u5f84"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u81ea\u5df1\u5b9e\u73b0\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"balancer.Balancer")),(0,l.kt)("li",{parentName:"ul"},"gRPC \u63d0\u4f9b\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"balancer"))),(0,l.kt)("p",null,"\u4e3a\u4e86\u9605\u8bfb\u6e90\u7801\uff0c\u6211\u4eec\u5148\u53bb\u9605\u8bfb gRPC \u63d0\u4f9b\u7684\u51e0\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer")," \u4e2d\u7684\u4e00\u4e2a\u8fdb\u884c\u6d41\u7a0b\u7406\u89e3\uff0c\u540e\u7eed\u518d\u4ecb\u7ecd\u5982\u4f55\u81ea\u5b9a\u4e49\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer")),(0,l.kt)("h2",{id:"grpc-balancer"},"gRPC Balancer"),(0,l.kt)("p",null,"gRPC \u63d0\u4f9b\u4e86\u51e0\u4e2a\u8d1f\u8f7d\u5747\u8861\u5904\u7406\uff0c\u5982\u4e0b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"grpclb"),(0,l.kt)("li",{parentName:"ul"},"rls"),(0,l.kt)("li",{parentName:"ul"},"roundrobin"),(0,l.kt)("li",{parentName:"ul"},"weightroundrobin"),(0,l.kt)("li",{parentName:"ul"},"weighttarget")),(0,l.kt)("p",null,"\u4e3a\u4e86\u597d\u7406\u89e3\uff0c\u6211\u4eec\u6311\u4e00\u4e2a\u7b80\u5355\u7684\u8d1f\u8f7d\u5747\u8861\u5668 ",(0,l.kt)("inlineCode",{parentName:"p"},"roundrobin")," \u7ee7\u7eed\u9605\u8bfb\u3002"),(0,l.kt)("p",null,"\u8d1f\u8f7d\u5747\u8861\u4ece\u54ea\u91cc\u83b7\u53d6\uff1f\u901a\u8fc7\u524d\u9762 ",(0,l.kt)("inlineCode",{parentName:"p"},"cc.maybeApplyDefaultServiceConfig(s.Addresses)")," \u65b9\u6cd5\u4e2d\u7684\u6e90\u7801\u53ef\u77e5\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.Balancer")," \u7531 ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.Builder"),"\n\u63d0\u4f9b\uff0c\u6211\u4eec\u770b\u4e00\u4e0b ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.Builder")," \u63a5\u53e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"// Builder creates a balancer.\ntype Builder interface {\n    // Build creates a new balancer with the ClientConn.\n    Build(cc ClientConn, opts BuildOptions) Balancer\n    // Name returns the name of balancers built by this builder.\n    // It will be used to pick balancers (for example in service config).\n    Name() string\n}\n")),(0,l.kt)("h2",{id:"roundrobin"},"roundrobin"),(0,l.kt)("p",null,"roundrobin \u662f gRPC \u5185\u7f6e\u7684\u8d1f\u8f7d\u5747\u8861\u5668\uff0c\u5176\u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"resolver")," \u4e00\u6837\u90fd\u662f\u901a\u8fc7\u63d2\u4ef6\u5f0f\u7f16\u7a0b\u63d0\u4f9b\u6269\u5c55\uff0c\u5728\u6e90\u7801\u4e2d\uff0c\u6211\u4eec\u53ef\u77e5\uff0c\nroundrobin \u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"init")," \u51fd\u6570\u4e2d\u5bf9 ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.Builder")," \u8fdb\u884c\u4e86\u6ce8\u518c\uff0c\u5176\u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"baseBuilder")," \u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.Builder")," \u7684\u5b9e\u73b0\uff0c\n\u4e0a\u6587\u6211\u4eec\u5f97\u77e5\uff0c ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.Balancer")," \u7531 ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.Builder.Build")," \u63d0\u4f9b\uff0c\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"baseBuilder.Build")," \u65b9\u6cd5\u6211\u4eec\u77e5\u9053 gRPC \u7684\n",(0,l.kt)("inlineCode",{parentName:"p"},"balancer")," \u5e95\u5c42\u662f\u7531 ",(0,l.kt)("inlineCode",{parentName:"p"},"baseBalancer")," \u5b9e\u73b0\uff0c\u90e8\u5206\u6e90\u7801\u5982\u4e0b\uff1a"),(0,l.kt)("p",null,"roundrobin.go"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"// newBuilder creates a new roundrobin balancer builder.\nfunc newBuilder() balancer.Builder {\n    return base.NewBalancerBuilder(Name, &rrPickerBuilder{}, base.Config{HealthCheck: true})\n}\n\nfunc init() {\n    balancer.Register(newBuilder())\n}\n")),(0,l.kt)("p",null,"balancer.go"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (bb *baseBuilder) Build(cc balancer.ClientConn, opt balancer.BuildOptions) balancer.Balancer {\n    bal := &baseBalancer{\n        cc:            cc,\n        pickerBuilder: bb.pickerBuilder,\n    \n        subConns: resolver.NewAddressMap(),\n        scStates: make(map[balancer.SubConn]connectivity.State),\n        csEvltr:  &balancer.ConnectivityStateEvaluator{},\n        config:   bb.config,\n    }\n    bal.picker = NewErrPicker(balancer.ErrNoSubConnAvailable)\n    return bal\n}\n")),(0,l.kt)("p",null,"\u6cbf\u7740 ",(0,l.kt)("inlineCode",{parentName:"p"},"UpdateState")," \u73af\u8282\u6700\u540e\u4e00\u4e2a\u65b9\u6cd5 ",(0,l.kt)("inlineCode",{parentName:"p"},"ccb.balancer.UpdateClientConnState(*ccs)")," \u8c03\u7528\u9605\u8bfb\uff0c\u5176\u5b9e\u6700\u7ec8\u6765\u5230\u4e86\n",(0,l.kt)("inlineCode",{parentName:"p"},"baseBalancer.UpdateClientConnState")," \u65b9\u6cd5\uff0c\u6211\u4eec\u67e5\u770b\u4e00\u4e0b\u6e90\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'func (b *baseBalancer) UpdateClientConnState(s balancer.ClientConnState) error {\n    ...\n    addrsSet := resolver.NewAddressMap()\n    for _, a := range s.ResolverState.Addresses {\n        addrsSet.Set(a, nil)\n        if _, ok := b.subConns.Get(a); !ok {\n            sc, err := b.cc.NewSubConn([]resolver.Address{a}, balancer.NewSubConnOptions{HealthCheckEnabled: b.config.HealthCheck})\n            if err != nil {\n                logger.Warningf("base.baseBalancer: failed to create new SubConn: %v", err)\n                continue\n            }\n            b.subConns.Set(a, sc)\n            b.scStates[sc] = connectivity.Idle\n            b.csEvltr.RecordTransition(connectivity.Shutdown, connectivity.Idle)\n            sc.Connect()\n        }\n    }\n    for _, a := range b.subConns.Keys() {\n        sci, _ := b.subConns.Get(a)\n        sc := sci.(balancer.SubConn)\n        if _, ok := addrsSet.Get(a); !ok {\n            b.cc.RemoveSubConn(sc)\n            b.subConns.Delete(a)\n        }\n    }\n    if len(s.ResolverState.Addresses) == 0 {\n        b.ResolverError(errors.New("produced zero addresses"))\n        return balancer.ErrBadResolverState\n    }\n    return nil\n}\n')),(0,l.kt)("p",null,"\u4ece\u6e90\u7801\u5f97\u77e5\uff0c\u8be5\u65b9\u6cd5\u505a\u4e86\u4ee5\u4e0b\u51e0\u4ef6\u4e8b\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u65b0\u7684 endpoint ",(0,l.kt)("inlineCode",{parentName:"li"},"NewSubConn")," \u5e76\u4e14 ",(0,l.kt)("inlineCode",{parentName:"li"},"Connect")),(0,l.kt)("li",{parentName:"ul"},"\u79fb\u51fa\u65e7\u7684\u5df2\u7ecf\u4e0d\u5b58\u5728\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"endpoint")," \u53ca\u5176 ",(0,l.kt)("inlineCode",{parentName:"li"},"Conn")," \u4fe1\u606f")),(0,l.kt)("p",null,"\u603b\u7684\u6765\u8bf4\u5c31\u662f\u66f4\u65b0\u8d1f\u8f7d\u5747\u8861\u5668\u5185\u53ef\u7528\u7684\u94fe\u63a5\u4fe1\u606f\u3002"),(0,l.kt)("h3",{id:"balancerclientconnnewsubconn"},"balancer.ClientConn.NewSubConn"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"balancer.ClientConn")," \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5176\u4ee3\u8868 gRPC \u7684\u4e00\u4e2a\u94fe\u63a5\uff0c\u800c ",(0,l.kt)("inlineCode",{parentName:"p"},"ccBalancerWrapper")," \u5c31\u4e3a\u5176\u5b9e\u73b0\u7c7b\uff0c\u5148\u770b\u770b\u8be5\u63a5\u53e3\u7684\u58f0\u660e\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type ClientConn interface {\n    // NewSubConn \u5e73\u8861\u5668\u8c03\u7528 NewSubConn \u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u7684SubConn\uff0c\u5b83\u4e0d\u4f1a\u963b\u585e\u5e76\u7b49\u5f85\u5efa\u7acb\u8fde\u63a5\uff0c\n    // SubConn \u7684\u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7 NewSubConnOptions \u6765\u63a7\u5236\u3002\n    NewSubConn([]resolver.Address, NewSubConnOptions) (SubConn, error)\n\n    // RemoveSubConn \u4eceClientConn \u4e2d\u5220\u9664SubConn \u3002 SubConn\u5c06\u5173\u95ed\u3002\n    RemoveSubConn(SubConn)\n    // UpdateAddresses \u66f4\u65b0\u4f20\u5165\u7684SubConn \u4e2d\u4f7f\u7528\u7684\u5730\u5740\uff0c gRPC \u68c0\u67e5\u5f53\u524d\u8fde\u63a5\u7684\u5730\u5740\u662f\u5426\u4ecd\u5728\u65b0\u5217\u8868\u4e2d\u3002 \u5982\u679c\u5b58\u5728\uff0c\u5c06\u4fdd\u6301\u8fde\u63a5\uff0c\n    // \u5426\u5219\uff0c\u8fde\u63a5\u5c06\u6b63\u5e38\u5173\u95ed\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0\u8fde\u63a5\u3002\n    // \u8fd9\u5c06\u89e6\u53d1SubConn\u7684\u72b6\u6001\u8f6c\u6362\u3002\n    \n    UpdateAddresses(SubConn, []resolver.Address)\n    \n    // UpdateState \u901a\u77e5 gRPC \u5e73\u8861\u5668\u7684\u5185\u90e8\u72b6\u6001\u5df2\u66f4\u6539\u3002\n    // gRPC \u5c06\u66f4\u65b0ClientConn\u7684\u8fde\u63a5\u72b6\u6001\uff0c\u5e76\u5728\u65b0\u7684Picker\u4e0a\u8c03\u7528 Pick \u6765\u9009\u62e9\u65b0\u7684 SubConn\u3002\n    UpdateState(State)\n    \n    // \u5e73\u8861\u5668\u8c03\u7528 ResolveNow \u4ee5\u901a\u77e5 gRPC \u8fdb\u884c\u540d\u79f0\u89e3\u6790\u3002\n    ResolveNow(resolver.ResolveNowOptions)\n    \n    // Target \u8fd4\u56de\u6b64ClientConn\u7684\u62e8\u53f7\u76ee\u6807\u3002\n    // \u5df2\u5f03\u7528\uff1a\u6539\u7528BuildOptions\u4e2d\u7684 Target \u5b57\u6bb5\n    Target() string\n}\n")),(0,l.kt)("p",null,"\u518d\u770b\u4e00\u4e0b ",(0,l.kt)("inlineCode",{parentName:"p"},"ccBalancerWrapper")," \u7684\u521b\u5efa:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func newCCBalancerWrapper(cc *ClientConn, b balancer.Builder, bopts balancer.BuildOptions) *ccBalancerWrapper {\n    ccb := &ccBalancerWrapper{\n        cc:       cc,\n        updateCh: buffer.NewUnbounded(),\n        closed:   grpcsync.NewEvent(),\n        done:     grpcsync.NewEvent(),\n        subConns: make(map[*acBalancerWrapper]struct{}),\n    }\n    go ccb.watcher()\n    ccb.balancer = b.Build(ccb, bopts)\n    _, ccb.hasExitIdle = ccb.balancer.(balancer.ExitIdler)\n    return ccb\n}\n")),(0,l.kt)("blockquote",null,(0,l.kt)("h3",{parentName:"blockquote",id:"\u6ce8\u610f"},"\u6ce8\u610f"),(0,l.kt)("p",{parentName:"blockquote"},"\u8bb0\u4f4f ",(0,l.kt)("inlineCode",{parentName:"p"},"go ccb.watcher()")," \u8fd9\u4e00\u884c\u4ee3\u7801\uff0c\u540e\u7eed\u8fd8\u4f1a\u56de\u5230\u8fd9\u4e2a\u65b9\u6cd5\u6765\u3002")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"baseBalancer.UpdateClientConnState")," \u4e2d\u5bf9\u65b0\u52a0\u5165\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"endpoint")," \u8fdb\u884c ",(0,l.kt)("inlineCode",{parentName:"p"},"NewSubConn")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"Connect")," \u5904\u7406\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b ",(0,l.kt)("inlineCode",{parentName:"p"},"NewSubConn")," \u65b9\u6cd5\u505a\u4e86\u54ea\u4e9b\u4e8b\u60c5\uff0c\n\u6765\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"ccBalancerWrapper.NewSubConn")," \u65b9\u6cd5\u4e2d:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'func (ccb *ccBalancerWrapper) NewSubConn(addrs []resolver.Address, opts balancer.NewSubConnOptions) (balancer.SubConn, error) {\n    if len(addrs) <= 0 {\n        return nil, fmt.Errorf("grpc: cannot create SubConn with empty address list")\n    }\n    ccb.mu.Lock()\n    defer ccb.mu.Unlock()\n    if ccb.subConns == nil {\n        return nil, fmt.Errorf("grpc: ClientConn balancer wrapper was closed")\n    }\n    ac, err := ccb.cc.newAddrConn(addrs, opts)\n    if err != nil {\n        return nil, err\n    }\n    acbw := &acBalancerWrapper{ac: ac}\n    acbw.ac.mu.Lock()\n    ac.acbw = acbw\n    acbw.ac.mu.Unlock()\n    ccb.subConns[acbw] = struct{}{}\n    return acbw, nil\n}\n')),(0,l.kt)("p",null,"\u4ece\u8be5\u65b9\u6cd5\u53ef\u77e5\uff0c\u4e3b\u8981\u662f\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"gprc.ClientConn.newAddrConn")," \u521b\u5efa\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"addrConn")," \u5bf9\u8c61\uff0c\u5e76\u4e14\u521b\u5efa\u4e00\u4e2a\n",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.SubConn")," \u7684\u5b9e\u73b0\u7c7b\u5bf9\u8c61 ",(0,l.kt)("inlineCode",{parentName:"p"},"acBalancerWrapper"),"\uff0c\u5c06\u5176\u52a0\u5165\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"ccBalancerWrapper.subConns")," \u4e2d\u8fdb\u884c\u7ba1\u7406\u3002"),(0,l.kt)("blockquote",null,(0,l.kt)("h3",{parentName:"blockquote",id:"\u8bf4\u660e"},"\u8bf4\u660e"),(0,l.kt)("p",{parentName:"blockquote"},"\u7531\u6b64\u53ef\u77e5\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"baseBalancer.UpdateClientConnState")," \u5224\u65ad\u5730\u5740\u53d8\u66f4\u540e\u7684 address \u662f\u5426\u4e3a\u65b0\u52a0\u5165\u7684\u5c31\u7531\n",(0,l.kt)("inlineCode",{parentName:"p"},"ccBalancerWrapper.subConns")," \u6765\u5bf9\u6bd4\u5373\u53ef\u5f97\u77e5\u3002")),(0,l.kt)("p",null,"\u63a5\u7740\u6211\u4eec\u7ee7\u7eed\u770b\u770b ",(0,l.kt)("inlineCode",{parentName:"p"},"Connect")," \u505a\u4e86\u4ec0\u4e48\u4e8b\u60c5\uff0c\u4e0a\u9762\u5df2\u7ecf\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"p"},"acBalancerWrapper")," \u521b\u5efa\u4e86\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.SubConn")," \u7684\u5b9e\u73b0\u5bf9\u8c61\uff0c\u63a5\u7740\u5229\u7528\u8be5\u5bf9\u8c61\u8fdb\u884c\u4e86\n",(0,l.kt)("inlineCode",{parentName:"p"},"Connect")," \u65b9\u6cd5\u8c03\u7528\uff0c\u6211\u4eec\u6765\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"acBalancerWrapper.Connect()")," \u65b9\u6cd5\u4e2d\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (acbw *acBalancerWrapper) Connect() {\n    acbw.mu.Lock()\n    defer acbw.mu.Unlock()\n    go acbw.ac.connect()\n}\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (ac *addrConn) connect() error {\n    ac.mu.Lock()\n    if ac.state == connectivity.Shutdown {\n        ac.mu.Unlock()\n        return errConnClosing\n    }\n    if ac.state != connectivity.Idle {\n        ac.mu.Unlock()\n        return nil\n    }\n    ac.updateConnectivityState(connectivity.Connecting, nil)\n    ac.mu.Unlock()\n    \n    ac.resetTransport()\n    return nil\n}\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ac.updateConnectivityState")," \u66f4\u65b0\u94fe\u63a5\u72b6\u6001\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"ac.resetTransport")," \u4e3b\u8981\u5de5\u4f5c\u5185\u5bb9\u5c31\u662f\u4ece ",(0,l.kt)("inlineCode",{parentName:"p"},"resolver.Address")," \u5217\u8868\u4e2d\u6309\u7167\u53bb\u521b\u5efa\u94fe\u63a5\u5e76\u540c\u6837\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"ac.updateConnectivityState")," \u66f4\u65b0\u72b6\u6001\uff0c\u5177\u4f53\u6e90\u7801\u53ef\u81ea\u884c\u9605\u8bfb\uff0c\n\u6211\u4eec\u63a5\u7740 ",(0,l.kt)("inlineCode",{parentName:"p"},"ac.updateConnectivityState")," \u65b9\u6cd5\u5f80\u4e0b\u8d70\uff0c\u5176\u5b9e\u8be5\u65b9\u6cd5\u8c03\u7528\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"grpc.ClientConn.handleSubConnStateChange")," \u65b9\u6cd5\uff0c\u6700\u7ec8\u53c8\u56de\u5230\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"ccBalancerWrapper.handleSubConnStateChange")," \u65b9\u6cd5\u4e2d\uff0c\u5176\u65b9\u6cd5\u8c03\u7528\u94fe\u5982\u4e0b\uff1a"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ac.updateConnectivityState")," -> ",(0,l.kt)("inlineCode",{parentName:"p"},"grpc.ClientConn.handleSubConnStateChange")," -> ",(0,l.kt)("inlineCode",{parentName:"p"},"ccBalancerWrapper.handleSubConnStateChange")),(0,l.kt)("p",null,"\u6765\u770b\u4e00\u4e0b\u6700\u540e\u4e00\u4e2a\u65b9\u6cd5 ",(0,l.kt)("inlineCode",{parentName:"p"},"ccBalancerWrapper.handleSubConnStateChange")," \u7684\u6e90\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (ccb *ccBalancerWrapper) handleSubConnStateChange(sc balancer.SubConn, s connectivity.State, err error) {\n    if sc == nil {\n        return\n    }\n    ccb.updateCh.Put(&scStateUpdate{\n        sc:    sc,\n        state: s,\n        err:   err,\n    })\n}\n")),(0,l.kt)("p",null,"\u8be5\u65b9\u6cd5\u628a\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.SubConn")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"connectivity.State")," \u4e22\u8fdb\u4e86\u4e00\u4e2a\u5207\u7247\uff0c\u7136\u540e\u901a\u8fc7\u4e00\u4e2a channel \u63a7\u5236\u53e6\u4e00\u4e2a goroutine \u53d6\u6570\u636e"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (b *Unbounded) Put(t interface{}) {\n    b.mu.Lock()\n    if len(b.backlog) == 0 {\n        select {\n        case b.c <- t:\n            b.mu.Unlock()\n            return\n        default:\n        }\n    }\n    b.backlog = append(b.backlog, t)\n    b.mu.Unlock()\n}\n")),(0,l.kt)("p",null,"\u8fd9\u91cc\u7684\u6570\u636e\u5199\u5165\u540e\uff0c\u5728\u54ea\u91cc\u8bfb\u53d6\uff0c\u8fd9\u5c31\u56de\u5230\u4e0a\u6587\u9700\u8981\u5927\u5bb6\u91cd\u70b9\u8bb0\u4f4f\u7684\u4e00\u4e2a goroutine \u8c03\u7528\u4e86\uff0c\u8fd8\u8bb0\u5f97\u5417\uff0c\u8bd5\u7740\u56de\u5fc6\u4e00\u4e0b\uff0c\u6ca1\u9519\u5c31\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"go ccb.watcher()")),(0,l.kt)("p",null,"\u6211\u4eec\u6765\u770b\u770b ",(0,l.kt)("inlineCode",{parentName:"p"},"watcher")," \u65b9\u6cd5\uff0c\u7531\u4e0a\u6587\u53ef\u77e5\uff0c\u6211\u4eec\u5199\u5982\u7684\u6570\u636e\u662f ",(0,l.kt)("inlineCode",{parentName:"p"},"scStateUpdate")," \u5bf9\u8c61\uff0c\u56e0\u6b64\u5982\u4e0b\u6e90\u7801\u5c31\u4ec5\u770b\u83b7\u53d6\u8be5\u5bf9\u8c61\u7684 case \u5373\u53ef\uff0c\u7701\u7565\u4e86\u6682\u65f6\u4e0d\u9700\u8981\u5173\u6ce8\u7684\u4ee3\u7801\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'func (ccb *ccBalancerWrapper) watcher() {\n    for {\n        select {\n        case t := <-ccb.updateCh.Get():\n            ccb.updateCh.Load()\n            if ccb.closed.HasFired() {\n                break\n            }\n            switch u := t.(type) {\n            case *scStateUpdate:\n                ccb.balancerMu.Lock()\n                ccb.balancer.UpdateSubConnState(u.sc, balancer.SubConnState{ConnectivityState: u.state, ConnectionError: u.err})\n                ccb.balancerMu.Unlock()\n            case ...:\n                ...\n            default:\n                logger.Errorf("ccBalancerWrapper.watcher: unknown update %+v, type %T", t, t)\n            }\n        case <-ccb.closed.Done():\n        }\n        ...\n    }\n}\n\n')),(0,l.kt)("p",null,"\u7531\u6e90\u7801\u5f97\u77e5\uff0c\u5176\u6700\u7ec8\u8c03\u7528\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.Balancer.UpdateSubConnState")," \u65b9\u6cd5\uff0c\u6211\u4eec\u4ee5 ",(0,l.kt)("inlineCode",{parentName:"p"},"roundrobin")," \u8d1f\u8f7d\u5747\u8861\u5668\u6765\u67e5\u770b\uff0c\u7531\u4e0a\u6587\u77e5\uff0cgRPC \u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer")," \u6700\u7ec8\u5b9e\u73b0\u7c7b\u662f\n",(0,l.kt)("inlineCode",{parentName:"p"},"baseBalancer"),"\uff0c \u56e0\u6b64 ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.Balancer.UpdateSubConnState")," \u6700\u7ec8\u843d\u5230\u4e86 ",(0,l.kt)("inlineCode",{parentName:"p"},"baseBalancer.UpdateSubConnState")," \u65b9\u6cd5\u4e0a\uff0c"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (b *baseBalancer) UpdateSubConnState(sc balancer.SubConn, state balancer.SubConnState) {\n    s := state.ConnectivityState\n    ...\n    oldS, ok := b.scStates[sc]\n    if !ok {\n        ...\n        return\n    }\n    if oldS == connectivity.TransientFailure &&\n        (s == connectivity.Connecting || s == connectivity.Idle) {\n        if s == connectivity.Idle {\n            sc.Connect()\n        }\n        return\n    }\n    b.scStates[sc] = s\n    switch s {\n    case connectivity.Idle:\n        sc.Connect()\n    case connectivity.Shutdown:\n        // When an address was removed by resolver, b called RemoveSubConn but\n        // kept the sc's state in scStates. Remove state for this sc here.\n        delete(b.scStates, sc)\n    case connectivity.TransientFailure:\n        // Save error to be reported via picker.\n        b.connErr = state.ConnectionError\n    }\n    \n    b.state = b.csEvltr.RecordTransition(oldS, s)\n    ...\n    if (s == connectivity.Ready) != (oldS == connectivity.Ready) ||\n        b.state == connectivity.TransientFailure {\n        b.regeneratePicker()\n    }\n    b.cc.UpdateState(balancer.State{ConnectivityState: b.state, Picker: b.picker})\n}\n")),(0,l.kt)("p",null,"\u8be5\u65b9\u6cd5\u4e2d\u6700\u7ec8\u53ea\u4f1a\u6709\u72b6\u6001 ",(0,l.kt)("inlineCode",{parentName:"p"},"connectivity.Ready")," \u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"SubConn")," \u5f80\u4e0b\u8d70\uff0c\u5176\u4ed6\u7684\u72b6\u6001\u8981\u4e48\u88ab\u91cd\u65b0\u53d1\u8d77 ",(0,l.kt)("inlineCode",{parentName:"p"},"Connect"),"\uff0c\u8981\u4e48\u88ab\u79fb\u51fa\n\u6700\u540e\u4e00\u884c\u4ee3\u7801\u53d1\u8d77 ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.ClientConn.UpdateState")," \u8c03\u7528\uff0c\u56e0\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"ccBalancerWrapper")," \u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.ClientConn")," \u7684\u5b9e\u73b0\uff0c\u56e0\u6b64\u6765\u5230\n",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.ClientConn.UpdateState")," \u4e0b\uff0c\u8be5\u65b9\u6cd5\u505a\u4e86\u4e24\u4ef6\u4e8b\u60c5\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u66f4\u65b0 ",(0,l.kt)("inlineCode",{parentName:"li"},"balancer.Picker")),(0,l.kt)("li",{parentName:"ul"},"\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"grpc.connectivityStateManager.updateState")," \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u91ca\u653e\u4e00\u4e2a channel \u4fe1\u53f7\uff0c\u901a\u77e5 goroutine \u8fdb\u884c\u4fe1\u606f\u5904\u7406\uff0c\u8be5 goroutine \u6211\u4eec\u540e\u7eed\u518d\u8bb2\u3002")),(0,l.kt)("p",null,"\u4e0a\u6587\u8bb2\u4e86\u8fd9\u4e48\u591a\uff0c\u90a3\u4e48\u8d1f\u8f7d\u7b97\u6cd5\u5728\u54ea\u91cc\uff0c\u53c8\u4f55\u65f6\u8c03\u7528\u5462\uff1f\n\u7531\u4e0a\u6587\u53ef\u77e5\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"baseBalancer.UpdateSubConnState")," \u66f4\u65b0\u4e86\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"picker"),"\uff0c\u8fd9\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"picker")," \u6765\u81ea\u54ea\u91cc\uff1f\u8ffd\u6eaf\u4e00\u4e0b\u6e90\u7801\u7ed3\u5408 ",(0,l.kt)("inlineCode",{parentName:"p"},"roundrobin")," \u8d1f\u8f7d\u5747\u8861\u5668\u53ef\u77e5\uff0c\u8be5 ",(0,l.kt)("inlineCode",{parentName:"p"},"picker"),"\u662f\u5728\n",(0,l.kt)("inlineCode",{parentName:"p"},"balancer.Builder")," \u7684\u5b9e\u73b0\u7c7b\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"base.NewBalancerBuilder")," \u521b\u5efa\u5b9e\u4f8b\u65f6\u4f20\u5165\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"base.PickBuilder")," \u5b9e\u73b0\u7c7b ",(0,l.kt)("inlineCode",{parentName:"p"},"rrPickerBuilder")," \u6784\u9020\u51fa\u6765\u7684\uff0c\u770b\u4e00\u4e0b ",(0,l.kt)("inlineCode",{parentName:"p"},"rrPickerBuilder"),"\n\u7684\u6e90\u7801\u53ef\u77e5 ",(0,l.kt)("inlineCode",{parentName:"p"},"Pick")," \u65b9\u6cd5\u4e2d\u5c31\u662f\u5bf9 ",(0,l.kt)("inlineCode",{parentName:"p"},"SubConn")," \u8fdb\u884c\u8d1f\u8f7d\u7b97\u6cd5\u7684\u5177\u4f53\u903b\u8f91\u4e86\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (p *rrPicker) Pick(balancer.PickInfo) (balancer.PickResult, error) {\n    p.mu.Lock()\n    sc := p.subConns[p.next]\n    p.next = (p.next + 1) % len(p.subConns)\n    p.mu.Unlock()\n    return balancer.PickResult{SubConn: sc}, nil\n}\n")),(0,l.kt)("p",null,"\u90a3\u4e48\u8be5\u65b9\u6cd5\u4ec0\u4e48\u65f6\u5019\u8c03\u7528\u5462\uff1f\u8fd9\u91cc\u76f4\u63a5\u7ed9\u51fa\u7b54\u6848\uff0c\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"grpc.ClientConn")," \u53d1\u8d77 ",(0,l.kt)("inlineCode",{parentName:"p"},"Invoke")," \u65b9\u6cd5\u8c03\u7528\u65f6\u4f1a\u901a\u8fc7\u8c03\u7528\u94fe\u8c03\u7528\u5230\uff0c\u6211\u4eec\u540e\u7eed\u6e90\u7801\u9605\u8bfb\u5230\u90a3\u91cc\u5728\u6765\u5206\u6790\u3002"),(0,l.kt)("h2",{id:"\u81ea\u5b9a\u4e49\u8d1f\u8f7d\u5747\u8861\u5668"},"\u81ea\u5b9a\u4e49\u8d1f\u8f7d\u5747\u8861\u5668"),(0,l.kt)("p",null,"\u81ea\u5b9a\u4e49\u8d1f\u8f7d\u5747\u8861\u5668\u9996\u5148\u9700\u8981\u4e86\u89e3  gRPC \u7684\u63d2\u4ef6\u5f0f\u7f16\u7a0b\uff0c\u8fd9\u90e8\u5206\u5185\u5bb9\u53ef\u4ee5\u81ea\u884c google\u3002"),(0,l.kt)("h3",{id:"\u73af\u5883"},"\u73af\u5883"),(0,l.kt)("p",null,"etcd\ngo"),(0,l.kt)("h3",{id:"\u8d1f\u8f7d\u5747\u8861\u76ee\u6807"},"\u8d1f\u8f7d\u5747\u8861\u76ee\u6807"),(0,l.kt)("p",null,"\u968f\u673a\u9009\u62e9"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"li"},"balancer.Builder"),"\n\u6211\u4eec\u5c31\u4e0d\u4e00\u4e00\u5b9e\u73b0\u5176\u65b9\u6cd5\u4e86\uff0c\u56e0\u4e3a\u8d1f\u8f7d\u5747\u8861\u5668\u7684\u91cd\u70b9\u5728\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\uff0c\u5373\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"li"},"base.PickerBuilder"),"\uff0c\u6211\u4eec\u76f4\u63a5\u7528 gRPC \u63d0\u4f9b\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"base.NewBalancerBuilder")," \u6765\u521b\u5efa ",(0,l.kt)("inlineCode",{parentName:"li"},"balancer.Builder"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'const Name = "random"\n\nfunc init() {\n    balancer.Register(newBuilder())\n}\n\nfunc newBuilder() balancer.Builder {\n    return base.NewBalancerBuilder(Name, &randomPickerBuilder{}, base.Config{HealthCheck: true})\n}\n')),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"li"},"base.PickerBuilder"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (r *randomPickerBuilder) Build(info base.PickerBuildInfo) balancer.Picker {\n    if len(info.ReadySCs) == 0 {\n        return base.NewErrPicker(balancer.ErrNoSubConnAvailable)\n    }\n    readyScs := make([]Conn, 0, len(info.ReadySCs))\n    for sc, info := range info.ReadySCs {\n        readyScs = append(readyScs, Conn{\n            SubConn:     sc,\n            SubConnInfo: info,\n        })\n    }\n    return &randomPicker{\n        subConns: readyScs,\n        r:        rand.New(rand.NewSource(time.Now().UnixNano())),\n    }\n}\n")),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"\u5b9e\u73b0 ",(0,l.kt)("inlineCode",{parentName:"li"},"balancer.Picker"),(0,l.kt)("inlineCode",{parentName:"li"},"balancer.Picker")," \u624d\u662f\u6211\u4eec\u9700\u8981\u6269\u5c55\u7684\u903b\u8f91\uff0c\u5373\u6309\u7167\u81ea\u5df1\u60f3\u8981\u7684\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u4ece ",(0,l.kt)("inlineCode",{parentName:"li"},"SunConn")," \u5217\u8868\u4e2d\u9009\u62e9\u4e00\u4e2a\u53ef\u7528\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"SubConn")," \u521b\u5efa\u94fe\u63a5\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'func (r *randomPicker) Pick(_ balancer.PickInfo) (balancer.PickResult, error) {\n    next := r.r.Int() % len(r.subConns)\n    sc := r.subConns[next]\n    fmt.Printf("picked: %+v\\n", sc.SubConnInfo.Address.Addr)\n    return balancer.PickResult{\n        SubConn: sc.SubConn,\n    }, nil\n}\n')),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"\u4f7f\u7528\u81ea\u5b9a\u4e49\u8d1f\u8f7d\u5747\u8861\u5668")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},'r := resolverBuilder.NewCustomBuilder(resolverBuilder.Scheme)\noptions := []grpc.DialOption{grpc.WithInsecure(), grpc.WithResolvers(r), grpc.WithBalancerName(builder.Name)}\nconn, err := grpc.Dial(resolverBuilder.Format("grpc-server"), options...)\n')),(0,l.kt)("h3",{id:"\u6f14\u793a\u6548\u679c"},"\u6f14\u793a\u6548\u679c"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"\u542f\u52a8\u591a\u4e2a server \u5b9e\u4f8b\uff0c\u6211\u8fd9\u91cc\u542f\u52a8\u4e86\u4e09\u4e2a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ go run server.go -addr localhost:8888\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ go run server.go -addr localhost:8889\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"$ go run server.go -addr localhost:8890\n")),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"\u591a\u6b21\u542f\u52a8 client\uff0c\u89c2\u5bdf Pick \u7684\u65e5\u5fd7\u8f93\u51fa")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"go run client.go\nendpoints:  [localhost:8888 localhost:8889 localhost:8888 localhost:8889 localhost:8890]\npicked: localhost:8888\noutput:  hi\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"go run client.go\nendpoints:  [localhost:8888 localhost:8889 localhost:8888 localhost:8889 localhost:8890]\npicked: localhost:8890\noutput:  hi\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-shell"},"go run client.go\nendpoints:  [localhost:8888 localhost:8889 localhost:8888 localhost:8889 localhost:8890]\npicked: localhost:8889\noutput:  hi\n")),(0,l.kt)("p",null,"..."),(0,l.kt)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),(0,l.kt)("p",null,"grpc \u901a\u8fc7\u670d\u52a1\u53d1\u73b0\u6216\u8005\u76f4\u8fde\u5f62\u5f0f\u83b7\u53d6\u5230 gRPC server \u7684\u5b9e\u4f8b\u7684 endpoints\uff0c\u7136\u540e\u901a\u77e5\u8d1f\u8f7d\u5747\u8861\u5668\u8fdb\u884c ",(0,l.kt)("inlineCode",{parentName:"p"},"SubConn")," \u66f4\u65b0\uff0c\u5bf9\u4e8e\u65b0\u52a0\u5165\u7684 endpoint \u8fdb\u884c\u5b9e\u4f8b\u521b\u5efa\uff0c\u79fb\u51fa\u5e9f\u5f03\u7684 endpoint\uff0c\n\u6700\u540e\u901a\u8fc7\u72b6\u6001\u66f4\u65b0\u5c06\u72b6\u6001\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"Ready")," \u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"SubConn")," \u8fdb\u884c\u7ba1\u7406\uff0cgRPC \u5728\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"Invoke")," \uff08\u5373client \u53d1\u8d77\u8bf7\u6c42\uff09\u65f6\uff0c\u5219\u4f1a\u901a\u8fc7\u8d1f\u8f7d\u5747\u8861\u5668\u4e2d\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"Picker")," \u53bb\u6309\u7167\u67d0\u4e00\u4e2a\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u9009\u62e9\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"SubConn"),"\n\u521b\u5efa\u94fe\u63a5\uff0c\u5982\u679c\u521b\u5efa\u6210\u529f\u5219\u4e0d\u518d\u8fdb\u884c\u5176\u4ed6 ",(0,l.kt)("inlineCode",{parentName:"p"},"SubConn")," \u7684\u5c1d\u8bd5\uff0c\u5426\u5219\u4f1a\u6309\u7167\u4e00\u5b9a\u7684\u9000\u907f\u7b97\u6cd5\u8fdb\u884c\u91cd\u8bd5\uff0c\u76f4\u5230\u9000\u907f\u5931\u8d25\u6216\u8005\u521b\u5efa\u94fe\u63a5\u6210\u529f\u4e3a\u6b62\u3002"),(0,l.kt)("p",null,"\u81ea\u5b9a\u4e49\u8d1f\u8f7d\u5747\u8861\u5668\u7684\u6838\u5fc3\u903b\u8f91\u5728\u4e8e\u5bf9 ",(0,l.kt)("inlineCode",{parentName:"p"},"Picker")," \u7684\u5b9e\u73b0\uff0c\u4ece ",(0,l.kt)("inlineCode",{parentName:"p"},"SubConn")," \u5217\u8868\u4e2d\u6309\u7167\u8d1f\u8f7d\u5747\u8861\u7b97\u6cd5\u9009\u62e9\u4e00\u4e2a ",(0,l.kt)("inlineCode",{parentName:"p"},"SubConn")," \u521b\u5efa\u94fe\u63a5\uff0c\u81ea\u5b9a\u4e49\u8d1f\u8f7d\u5747\u8861\u5668\u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"Resolver")," \u4e00\u6837\u90fd\u662f\u7528\u5230\u4e86\u63d2\u4ef6\u5f0f\u7f16\u7a0b\u63d0\u4f9b\u4e86\u6269\u5c55\u80fd\u529b\u3002"),(0,l.kt)("p",null,"\u672c\u6b21\u6e90\u7801\u9605\u8bfb\u53ea\u662f\u4e3a\u4e86\u7406\u89e3 gRPC \u7684\u8c03\u7528\u6d41\u7a0b\uff0c\u5176\u4e2d\u6709\u5f88\u591a\u7ec6\u8282\u5728\u6e90\u7801\u6ce8\u91ca\u4e2d\u6709\u8bf4\u660e\uff0c\u5176\u53ef\u4ee5\u52a0\u6df1\u6211\u4eec\u5bf9 gRPC \u7684\u7406\u89e3\uff0c\u56e0\u6b64\u5728\u7406\u89e3\u672c\u6587\u4ecb\u7ecd\u540e\uff0c\u53ef\u4ee5\u518d\u6b21\u9605\u8bfb\u6e90\u7801\u52a0\u6df1\u4e00\u4e0b\u7406\u89e3\u3002"),(0,l.kt)("h2",{id:"\u6e90\u7801"},"\u6e90\u7801"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/anqiansong/golang-notes/tree/main/example/grpc/balancer"},"https://github.com/anqiansong/golang-notes/tree/main/example/grpc/balancer")))}C.isMDXComponent=!0},4631:function(e,n,a){n.Z=a.p+"assets/images/grpc-balance-82719f3277dacd83fa6e83ec2a2d7eb9.png"}}]);